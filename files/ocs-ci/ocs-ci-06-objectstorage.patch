diff --git a/tests/manage/mcg/test_bucket_deletion.py b/tests/manage/mcg/test_bucket_deletion.py
index d0f97c4c..fcdf95c2 100644
--- a/tests/manage/mcg/test_bucket_deletion.py
+++ b/tests/manage/mcg/test_bucket_deletion.py
@@ -173,8 +173,16 @@ class TestBucketDeletion(MCGTest):
                 *["OC", {"interface": "OC", "backingstore_dict": {"gcp": [(1, None)]}}],
                 marks=[tier1],
             ),
+            pytest.param(
+                *["OC", {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}}],
+                 marks=[tier1],
+            ),
+            pytest.param(
+                *["CLI", {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}}],
+                marks=[tier1],
+            ),
         ],
-        ids=["S3", "CLI", "OC", "OC-AWS", "OC-AZURE", "OC-GCP"],
+        ids=["S3", "CLI", "OC", "OC-AWS", "OC-AZURE", "OC-GCP", "OC-IBMCOS", "CLI-IBMCOS"],
     )
     @flaky
     def test_bucket_delete_with_objects(
diff --git a/tests/manage/mcg/test_multicloud.py b/tests/manage/mcg/test_multicloud.py
index ffc8f970..9c4bdddf 100644
--- a/tests/manage/mcg/test_multicloud.py
+++ b/tests/manage/mcg/test_multicloud.py
@@ -25,6 +25,8 @@ class TestMultiCloud(MCGTest):
             pytest.param(("oc", {"azure": [(1, None)]})),
             pytest.param(("cli", {"gcp": [(1, None)]})),
             pytest.param(("oc", {"gcp": [(1, None)]})),
+            pytest.param(("cli", {"ibmcos": [(1, None)]})),
+            pytest.param(("oc", {"ibmcos": [(1, None)]})),
         ],
         # A test ID list for describing the parametrized tests
         # <CLOUD_PROVIDER>-<METHOD>-<AMOUNT-OF-BACKINGSTORES>
@@ -35,6 +37,8 @@ class TestMultiCloud(MCGTest):
             "AZURE-OC-1",
             "GCP-CLI-1",
             "GCP-OC-1",
+            "IBMCOS-CLI-1",
+            "IBMCOS-OC-1",
         ],
     )
     def test_multicloud_backingstore_creation(
@@ -56,6 +60,8 @@ class TestMultiCloud(MCGTest):
             pytest.param(("oc", {"azure": [(1, None)]})),
             pytest.param(("cli", {"gcp": [(1, None)]})),
             pytest.param(("oc", {"gcp": [(1, None)]})),
+            pytest.param(("cli", {"ibmcos": [(1, None)]})),
+            pytest.param(("oc", {"ibmcos": [(1, None)]})),
         ],
         # A test ID list for describing the parametrized tests
         # <CLOUD_PROVIDER>-<METHOD>-<AMOUNT-OF-BACKINGSTORES>
@@ -66,6 +72,8 @@ class TestMultiCloud(MCGTest):
             "AZURE-OC-1",
             "GCP-CLI-1",
             "GCP-OC-1",
+            "IBMCOS-CLI-1",
+            "IBMCOS-OC-1",
         ],
     )
     def test_multicloud_backingstore_deletion(
diff --git a/tests/manage/mcg/test_object_integrity.py b/tests/manage/mcg/test_object_integrity.py
index 389173b2..7d354936 100644
--- a/tests/manage/mcg/test_object_integrity.py
+++ b/tests/manage/mcg/test_object_integrity.py
@@ -55,6 +55,14 @@ class TestObjectIntegrity(MCGTest):
                 {"interface": "OC", "backingstore_dict": {"gcp": [(1, None)]}},
                 marks=[tier1],
             ),
+            pytest.param(
+                {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
+            pytest.param(
+                {"interface": "CLI", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
             pytest.param(
                 {
                     "interface": "OC",
@@ -79,6 +87,8 @@ class TestObjectIntegrity(MCGTest):
             "AWS-OC-1",
             "AZURE-OC-1",
             "GCP-OC-1",
+            "IBMCOS-OC-1",
+            "IBMCOS-CLI-1",
             "AWS-OC-Cache",
         ],
     )
diff --git a/tests/manage/mcg/test_write_to_bucket.py b/tests/manage/mcg/test_write_to_bucket.py
index dcfad1b2..2ee330e0 100644
--- a/tests/manage/mcg/test_write_to_bucket.py
+++ b/tests/manage/mcg/test_write_to_bucket.py
@@ -81,12 +81,22 @@ class TestBucketIO(MCGTest):
                 *["OC", {"interface": "OC", "backingstore_dict": {"gcp": [(1, None)]}}],
                 marks=[tier1],
             ),
+            pytest.param(
+                *["OC", {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}}],
+                marks=[tier1],
+            ),
+            pytest.param(
+                *["CLI", {"interface": "CLI", "backingstore_dict": {"ibmcos": [(1, None)]}}],
+                marks=[tier1],
+            ),
         ],
         ids=[
             "DEFAULT-BACKINGSTORE",
             "AWS-OC-1",
             "AZURE-OC-1",
             "GCP-OC-1",
+            "IBMCOS-OC-1",
+            "IBMCOS-CLI-1",
         ],
     )
     @flaky
@@ -140,12 +150,22 @@ class TestBucketIO(MCGTest):
                 {"interface": "OC", "backingstore_dict": {"gcp": [(1, None)]}},
                 marks=[tier1],
             ),
+            pytest.param(
+                {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
+            pytest.param(
+                {"interface": "CLI", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
         ],
         ids=[
             "DEFAULT-BACKINGSTORE",
             "AWS-OC-1",
             "AZURE-OC-1",
             "GCP-OC-1",
+            "IBMCOS-OC-1",
+            "IBMCOS-CLI-1",
         ],
     )
     def test_mcg_data_deduplication(
@@ -204,12 +224,22 @@ class TestBucketIO(MCGTest):
                 {"interface": "OC", "backingstore_dict": {"gcp": [(1, None)]}},
                 marks=[tier1],
             ),
+            pytest.param(
+                {"interface": "OC", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
+            pytest.param(
+                {"interface": "CLI", "backingstore_dict": {"ibmcos": [(1, None)]}},
+                marks=[tier1],
+            ),
         ],
         ids=[
             "DEFAULT-BACKINGSTORE",
             "AWS-OC-1",
             "AZURE-OC-1",
             "GCP-OC-1",
+            "IBMCOS-OC-1",
+            "IBMCOS-CLI-1",
         ],
     )
     def test_mcg_data_compression(

